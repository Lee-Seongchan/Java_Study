public class Main {
    public static void main(String[] args) {

        //=========================================
        // 1. char = 정수형 이다.
        // 2. 각각의 데이터 타입의 형태로 출력됨
        // * int 형 타입에 문자로 초기화를 진행 하더라도
        // 출력할 때에는 정수를 출력하고, char 타입에
        // 정수로 초기화를 하더라도 출력할 때에는 문자가 출력됨.
        //==========================================

        char c1 = 'A';

        int i1 = c1;

        char c2 = 66;

        int i2 = c1 + i1;

        System.out.println("c1 = " + c1);
        System.out.println("i1 = " + i1);
        System.out.println("c2 = " + c2);
        System.out.println("i2 = " + i2);


        //=========================================
        // 1. float = 실수 값의 마지막에 f를 붙여준다.
        // 2. double = 실수 값의 마지막에 d를 붙여준다.
        // * double = 실수 값의 마지막에 d가 없더라도 double 타입으로 판단한다.
        //=========================================

        float f = 3.14159265358973f;

        double d = 3.14159265358973d;
        double d2 = 3.14159265358973;

        System.out.println("f = " + f);
        System.out.println("d = " + d);
        System.out.println("d2 = " + d2);


        //=========================================
        // [상수와 리터럴]
        // ** final = 상수 선언에 사용되는 키워드
        // * 선언시에 최초 한번만 초기화 가능.
        //=========================================

        final double PI = 3.141592;
        // ** 상수로 선언하고 값을 다시 변경하려고 할 때 Error 발생
        //PI = 3.141592653689793;
        //보통은 R밸류는 상수 L밸류는 변수
        //final로 인해 변수인 L밸류가 상수처럼 쓰이기 때문에 '상수화 시켰다' 라고 생각하면 된다.
        System.out.println("PI = " + PI);


        //=========================================
        // [제어문자] : \다음에 하나의 문자를 추가해서 특별한 의미를 부여한 문자
        //[\n] = 줄바꿈
        //[\t] = 탭
        //[\\] = \
        //[\'] = '
        //[\"] = "
        //=========================================

        System.out.println("문자열을\n 출력");
        System.out.println("문자열을\t 출력");
        System.out.println("\'문\',\'자\',\'열\',\'을\',\'출\',\'력\' ");
        System.out.println("\"문자열을\" \"출력\"");

        //=========================================
        //  [변수의 범위]
        //  프로그램을 실행하는 단위를 블록 단위로 구분하는데 블록을 나누는 기준이 { } 중괄호 이다.
        // 1. 특정 영역에서 생성된 변수는 해당 영역을 빠져나가면 더 이상 사용할 수 없다.
        //
        // 2. 영역이 다르다면 변수명을 동일하게 지을 수 있다.
        //
        // 3. A라는 영역 내부에서 또 다른 B영역을 포함 한다면 B영역은 A영역의 일부이다.
        //
        //  스택 구조를 공부해야함.
        //=========================================

        int Number1 = 10;
        {
            int Number2 = 1000;
            Number1 = 100;
        }
        System.out.println("Number1 = " + Number1);

        {
            int Number2 = 100000;   // 영역이 다르기 때문에 같은 이름으로 선언을 할 수 있다.
            Number1 = 1000;
        }

        System.out.println("Number1 = " + Number1);
       // System.out.println("Number2 = " + Number2); Error


    }
}